// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrzygotowanieDoKolosa2.Context;

#nullable disable

namespace PrzygotowanieDoKolosa2.Migrations
{
    [DbContext(typeof(ReservationContext))]
    [Migration("20240613141612_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.BoatStandard", b =>
                {
                    b.Property<int>("IdBoatStandard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBoatStandard"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdBoatStandard");

                    b.ToTable("BoatStandard");

                    b.HasData(
                        new
                        {
                            IdBoatStandard = 1,
                            Level = 3,
                            Name = "Luxury"
                        },
                        new
                        {
                            IdBoatStandard = 2,
                            Level = 1,
                            Name = "Melina"
                        });
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdClientCategory")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.HasIndex("IdClientCategory");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Birthday = new DateTime(1999, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Juan@gmail.com",
                            IdClientCategory = 2,
                            LastName = "Jun",
                            Name = "Juan",
                            Pesel = "23578629532"
                        },
                        new
                        {
                            IdClient = 2,
                            Birthday = new DateTime(2000, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "PalmiXXX@onet.com",
                            IdClientCategory = 3,
                            LastName = "Palmowski",
                            Name = "Palmosz",
                            Pesel = "97679654"
                        });
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.ClientCategory", b =>
                {
                    b.Property<int>("IdClientCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientCategory"));

                    b.Property<int>("DiscountPerc")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClientCategory");

                    b.ToTable("ClientCategory");

                    b.HasData(
                        new
                        {
                            IdClientCategory = 1,
                            DiscountPerc = 30,
                            Name = "Vip"
                        },
                        new
                        {
                            IdClientCategory = 2,
                            DiscountPerc = 0,
                            Name = "Standard"
                        },
                        new
                        {
                            IdClientCategory = 3,
                            DiscountPerc = 50,
                            Name = "Svip"
                        });
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservation"));

                    b.Property<string>("CancelReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Fulfilled")
                        .HasColumnType("tinyint");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("NumOfBoats")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasPrecision(2)
                        .HasColumnType("float(2)");

                    b.HasKey("IdReservation");

                    b.HasIndex("IdBoatStandard");

                    b.HasIndex("IdClient");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            IdReservation = 1,
                            Capacity = 5,
                            DateFrom = new DateTime(2024, 6, 13, 16, 16, 11, 541, DateTimeKind.Local).AddTicks(5201),
                            DateTo = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fulfilled = (byte)0,
                            IdBoatStandard = 2,
                            IdClient = 1,
                            NumOfBoats = 2
                        },
                        new
                        {
                            IdReservation = 2,
                            Capacity = 2,
                            DateFrom = new DateTime(2024, 6, 13, 16, 16, 11, 544, DateTimeKind.Local).AddTicks(5937),
                            DateTo = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fulfilled = (byte)0,
                            IdBoatStandard = 2,
                            IdClient = 1,
                            NumOfBoats = 1
                        });
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.SailBoat", b =>
                {
                    b.Property<int>("IdSailboat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSailboat"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdBoatStandard")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasPrecision(2)
                        .HasColumnType("float(2)");

                    b.HasKey("IdSailboat");

                    b.HasIndex("IdBoatStandard");

                    b.ToTable("Sailboat");

                    b.HasData(
                        new
                        {
                            IdSailboat = 1,
                            Capacity = 10,
                            Description = "staroc i zlom",
                            IdBoatStandard = 2,
                            Name = "Milenials 1980",
                            Price = 200.0
                        },
                        new
                        {
                            IdSailboat = 2,
                            Capacity = 4,
                            Description = "nowiutkie jak glowa bobasa",
                            IdBoatStandard = 1,
                            Name = "Golec Ship",
                            Price = 2000.0
                        });
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Sailboat_Reservation", b =>
                {
                    b.Property<int>("IdReservation")
                        .HasColumnType("int");

                    b.Property<int>("IdSailboat")
                        .HasColumnType("int");

                    b.HasKey("IdReservation", "IdSailboat");

                    b.HasIndex("IdSailboat");

                    b.ToTable("Sailboat_Reservation");

                    b.HasData(
                        new
                        {
                            IdReservation = 1,
                            IdSailboat = 1
                        },
                        new
                        {
                            IdReservation = 1,
                            IdSailboat = 2
                        },
                        new
                        {
                            IdReservation = 2,
                            IdSailboat = 2
                        });
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Client", b =>
                {
                    b.HasOne("PrzygotowanieDoKolosa2.Models.ClientCategory", "ClientCategoryNavigation")
                        .WithMany("ClientNavigation")
                        .HasForeignKey("IdClientCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientCategoryNavigation");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Reservation", b =>
                {
                    b.HasOne("PrzygotowanieDoKolosa2.Models.BoatStandard", "BoatStandardNavigation")
                        .WithMany("ReservationsNavigation")
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrzygotowanieDoKolosa2.Models.Client", "ClientNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatStandardNavigation");

                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.SailBoat", b =>
                {
                    b.HasOne("PrzygotowanieDoKolosa2.Models.BoatStandard", "BoatStandardNavigation")
                        .WithMany("SailBoatsNavigation")
                        .HasForeignKey("IdBoatStandard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatStandardNavigation");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Sailboat_Reservation", b =>
                {
                    b.HasOne("PrzygotowanieDoKolosa2.Models.Reservation", "ReservationNavigation")
                        .WithMany("SailboatReservationsNavigation")
                        .HasForeignKey("IdReservation")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PrzygotowanieDoKolosa2.Models.SailBoat", "SailBoatNavigation")
                        .WithMany("SailboatReservationsNavigation")
                        .HasForeignKey("IdSailboat")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ReservationNavigation");

                    b.Navigation("SailBoatNavigation");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.BoatStandard", b =>
                {
                    b.Navigation("ReservationsNavigation");

                    b.Navigation("SailBoatsNavigation");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.ClientCategory", b =>
                {
                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.Reservation", b =>
                {
                    b.Navigation("SailboatReservationsNavigation");
                });

            modelBuilder.Entity("PrzygotowanieDoKolosa2.Models.SailBoat", b =>
                {
                    b.Navigation("SailboatReservationsNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
